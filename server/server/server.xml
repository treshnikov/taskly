<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Server</name>
    </assembly>
    <members>
        <member name="T:Taskly.CQRS.Implementations.Commands.CommandsDispatcher">
            <summary>
            Commands dispatcher standard implementation
            </summary>
        </member>
        <member name="M:Taskly.CQRS.Implementations.Commands.CommandsDispatcher.#ctor(Taskly.CQRS.Implementations.Commands.CommandsFactory.ICommandsFactory)">
            <summary>
            Constructor for commands dispatcher
            </summary>
            <param name="commandsFactory">Commands factory</param>
        </member>
        <member name="M:Taskly.CQRS.Implementations.Commands.CommandsDispatcher.Execute``1(``0)">
            <summary>
            Method for synchronous commands execution
            </summary>
            <typeparam name="TCommandContext">Command context type</typeparam>
            <param name="commandContext">Information needed for commands execution</param>
        </member>
        <member name="M:Taskly.CQRS.Implementations.Commands.CommandsDispatcher.ExecuteAsync``1(``0)">
            <summary>
            Method for asynchronous commands execution
            </summary>
            <typeparam name="TCommandContext">Command context type</typeparam>
            <param name="commandContext">Information needed for commands execution</param>
        </member>
        <member name="T:Taskly.CQRS.Implementations.Commands.CommandsFactory.AutofacCommandsFactory">
            <summary>
            Commands factory implementation for Autofac
            </summary>
        </member>
        <member name="M:Taskly.CQRS.Implementations.Commands.CommandsFactory.AutofacCommandsFactory.#ctor(Autofac.IComponentContext)">
            <summary>
            Constructor
            </summary>
            <param name="componentContext">Autofac components context</param>
        </member>
        <member name="M:Taskly.CQRS.Implementations.Commands.CommandsFactory.AutofacCommandsFactory.CreateCommand``1">
            <summary>
            Method for synchronous commands creation
            </summary>
            <typeparam name="TCommandContext">Command context type</typeparam>
            <returns>Command instance</returns>
        </member>
        <member name="M:Taskly.CQRS.Implementations.Commands.CommandsFactory.AutofacCommandsFactory.CreateAsyncCommand``1">
            <summary>
            Method for asynchronous commands creation
            </summary>
            <typeparam name="TCommandContext">Command context type</typeparam>
            <returns>Command instance</returns>
        </member>
        <member name="T:Taskly.CQRS.Implementations.Commands.CommandsFactory.ICommandsFactory">
            <summary>
            Commands factory interface
            </summary>
        </member>
        <member name="M:Taskly.CQRS.Implementations.Commands.CommandsFactory.ICommandsFactory.CreateCommand``1">
            <summary>
            Method for synchronous commands creation
            </summary>
            <typeparam name="TCommandContext">Command context type</typeparam>
            <returns>Command instance</returns>
        </member>
        <member name="M:Taskly.CQRS.Implementations.Commands.CommandsFactory.ICommandsFactory.CreateAsyncCommand``1">
            <summary>
            Method for asynchronous commands creation
            </summary>
            <typeparam name="TCommandContext">Command context type</typeparam>
            <returns>Command instance</returns>
        </member>
        <member name="T:Taskly.CQRS.Implementations.Queries.QueriesDispatcher">
            <summary>
            Queries dispatcher standart implementation
            </summary>
        </member>
        <member name="M:Taskly.CQRS.Implementations.Queries.QueriesDispatcher.#ctor(Taskly.CQRS.Implementations.Queries.QueriesFactory.IQueriesFactory)">
            <summary>
            Constructor
            </summary>
            <param name="queriesFactory">Queries factory</param>
        </member>
        <member name="M:Taskly.CQRS.Implementations.Queries.QueriesDispatcher.Execute``1(Taskly.CQRS.Abstractions.Queries.ICriterion{``0})">
            <summary>
            Method for queries execution
            </summary>
            <typeparam name="TResult">Query result type</typeparam>
            <param name="criterion">Information needed for queries execution</param>
            <returns>Query result</returns>
        </member>
        <member name="T:Taskly.CQRS.Implementations.Queries.QueriesFactory.AutofacQueriesFactory">
            <summary>
            Queries factory for Autofac
            </summary>
        </member>
        <member name="M:Taskly.CQRS.Implementations.Queries.QueriesFactory.AutofacQueriesFactory.#ctor(Autofac.IComponentContext)">
            <summary>
            Constructor
            </summary>
            <param name="componentContext">Autofac components context</param>
        </member>
        <member name="M:Taskly.CQRS.Implementations.Queries.QueriesFactory.AutofacQueriesFactory.Create``2">
            <summary>
            Method for queries creation
            </summary>
            <typeparam name="TCriterion">Query criterion type</typeparam>
            <typeparam name="TResult">Query result type</typeparam>
            <returns>Query instance</returns>
        </member>
        <member name="T:Taskly.CQRS.Implementations.Queries.QueriesFactory.IQueriesFactory">
            <summary>
            Queries factory interface
            </summary>
        </member>
        <member name="M:Taskly.CQRS.Implementations.Queries.QueriesFactory.IQueriesFactory.Create``2">
            <summary>
            Method for queries creation
            </summary>
            <typeparam name="TCriterion">Query criterion type</typeparam>
            <typeparam name="TResult">Query result type</typeparam>
            <returns>Query instance</returns>
        </member>
    </members>
</doc>
